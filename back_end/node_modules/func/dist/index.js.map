{"version":3,"sources":["/webpack:bootstrap","/src/containers/container.ts","/src/annotations/major.ts","/src/constants/metadata.ts","/src/annotations/sub-options.ts","/src/annotations/not-found.ts","/src/annotations/option.ts","/src/utils/validator.ts","/node_modules/reflect-metadata/Reflect.js","/node_modules/arg/index.js","/src/annotations/index.ts","/src/services/command-args.ts","/src/services/index.ts","/src/utils/factory.ts","/src/containers/mutation.ts","/src/annotations/command.ts","/src/services/register.ts","/src/utils/filter.ts","/src/annotations/injectable.ts","/src/index.ts","/src/services/option-args.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","startup","Object","defineProperty","value","mutation_1","metadata_1","Container","[object Object]","params","this","datas","handlers","COMMAND","OPTION","NOT_FOUND","MAJOR","mutation","Mutation","init","insert","map","fn","Reflect","getMetadata","metadata","COMMAND_IDENTIFIER","forEach","handler","type","HANDLER_IDENTIFIER","dataColumn","push","devour","commands","options","notFounds","majors","CommandMajor","target","defineMetadata","__importStar","mod","__esModule","result","k","hasOwnProperty","validator","SubOptions","commandOptions","mustBeArray","nextOptions","item","requireKey","name","assign","Boolean","SUB_OPTION_IDENTIFIER","CommandNotFound","Option","optionParams","OPTION_IDENTIFIER","key","Error","Array","isArray","factory","root","global","self","Function","exporter","makeExporter","previous","configurable","writable","hasOwn","prototype","supportsSymbol","Symbol","toPrimitiveSymbol","toPrimitive","iteratorSymbol","iterator","supportsCreate","create","supportsProto","__proto__","downLevel","HashMap","MakeDictionary","has","get","undefined","functionPrototype","getPrototypeOf","usePolyfill","process","env","_Map","Map","entries","CreateMapPolyfill","_Set","Set","CreateSetPolyfill","_WeakMap","WeakMap","CreateWeakMapPolyfill","Metadata","decorate","decorators","propertyKey","attributes","IsUndefined","IsArray","TypeError","IsObject","IsNull","ToPropertyKey","DecorateProperty","IsConstructor","DecorateConstructor","metadataKey","metadataValue","decorator","IsPropertyKey","OrdinaryDefineOwnMetadata","hasMetadata","OrdinaryHasMetadata","hasOwnMetadata","OrdinaryHasOwnMetadata","OrdinaryGetMetadata","getOwnMetadata","OrdinaryGetOwnMetadata","getMetadataKeys","OrdinaryMetadataKeys","getOwnMetadataKeys","OrdinaryOwnMetadataKeys","deleteMetadata","metadataMap","GetOrCreateMetadataMap","delete","size","targetMetadata","length","decorated","descriptor","O","P","Create","set","MetadataKey","parent","OrdinaryGetPrototypeOf","ToBoolean","MetadataValue","ownKeys","parentKeys","keys","_i","ownKeys_1","hasKey","add","_a","parentKeys_1","keysObj","GetIterator","next","IteratorStep","nextValue","IteratorValue","e","IteratorClose","Type","x","IsSymbol","ToPrimitive","input","PreferredType","hint","exoticToPrim","GetMethod","OrdinaryToPrimitive","toString_1","toString","IsCallable","valueOf","toString_2","argument","ToString","V","func","obj","method","iterResult","done","f","proto","prototypeProto","constructor","cacheSentinel","arraySentinel","MapIterator","values","selector","_index","_keys","_values","_selector","index","throw","error","return","_cacheKey","_cacheIndex","enumerable","_find","clear","getKey","getValue","getEntry","indexOf","_","_map","UUID_SIZE","rootKey","CreateUniqueKey","_key","table","GetOrCreateWeakMapTable","CreateUUID","FillRandomBytes","buffer","Math","random","GenRandomBytes","Uint8Array","crypto","getRandomValues","msCrypto","data","offset","byte","toLowerCase","__","flagSymbol","arg","opts","argv","permissive","stopAtPositional","slice","aliases","isFlag","prev","len","wholeArg","concat","separatedArguments","split","a","j","originalArgName","argStr","argName","err","code","extended","flag","COUNT","v","existingCount","__export","m","p","__decorate","desc","c","arguments","r","getOwnPropertyDescriptor","d","__metadata","annotations_1","CommandArgsProvider","_inputs","_option","_native","_value","inputs","option","native","Injectable","services","filter","serviceFunctions","Factory","paramTypes","DESIGN_PARAM_TYPES","args","nativeOption","find","isRegisterProvider","cDatas","commandsToDatas","oDatas","optionsToDatas","__importDefault","default","arg_1","factory_1","command","findCommand","optionDatas","globalOptions","optionsToKeyValue","findSubOptions","currnetTriggerOptionKey","reduce","pre","startsWith","nativeKey","removeHyphen","nativeVal","getServiceParams","currentTriggerOptionFn","notFoundCommand","majorCommand","subs","first","alias","commandFactory","commandParams","Command","RegisterProvider","_commands","_options","current","replace","ensureHyphen","hyphens","repeat","types","HOST_PARAM_TYPES","container_1","OptionArgsProvider"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n\n \t// the startup function\n \tfunction startup() {\n \t\t// Load entry module and return exports\n \t\treturn __webpack_require__(946);\n \t};\n\n \t// run startup\n \treturn startup();\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst mutation_1 = require(\"./mutation\");\nconst metadata_1 = require(\"../constants/metadata\");\nclass Container {\n    constructor(params) {\n        this.params = params;\n        this.datas = {\n            [metadata_1.handlers.COMMAND]: [],\n            [metadata_1.handlers.OPTION]: [],\n            [metadata_1.handlers.NOT_FOUND]: [],\n            [metadata_1.handlers.MAJOR]: [],\n        };\n        this.mutation = new mutation_1.Mutation();\n        this.init();\n        this.insert();\n    }\n    getCommands() {\n        return this.datas[metadata_1.handlers.COMMAND]\n            .map(fn => Reflect.getMetadata(metadata_1.metadata.COMMAND_IDENTIFIER, fn));\n    }\n    init() {\n        this.params.forEach(handler => {\n            const type = Reflect.getMetadata(metadata_1.metadata.HANDLER_IDENTIFIER, handler);\n            const dataColumn = this.datas[type];\n            dataColumn && dataColumn.push(handler);\n        });\n    }\n    insert() {\n        this.mutation.devour({\n            commands: this.datas[metadata_1.handlers.COMMAND],\n            options: this.datas[metadata_1.handlers.OPTION],\n            notFounds: this.datas[metadata_1.handlers.NOT_FOUND],\n            majors: this.datas[metadata_1.handlers.MAJOR],\n        });\n    }\n}\nexports.Container = Container;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst metadata_1 = require(\"../constants/metadata\");\nexports.CommandMajor = () => target => {\n    Reflect.defineMetadata(metadata_1.metadata.HANDLER_IDENTIFIER, metadata_1.handlers.MAJOR, target);\n    return target;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar metadata;\n(function (metadata) {\n    metadata[\"DESIGN_PARAM_TYPES\"] = \"design:paramtypes\";\n    metadata[\"HOST_PARAM_TYPES\"] = \"host:paramtypes\";\n    metadata[\"COMMAND_IDENTIFIER\"] = \"command_identifier\";\n    metadata[\"OPTION_IDENTIFIER\"] = \"option_identifier\";\n    metadata[\"SUB_OPTION_IDENTIFIER\"] = \"sub_option_identifier\";\n    metadata[\"HANDLER_IDENTIFIER\"] = \"handler_indentifier\";\n    metadata[\"INJECT_TOKEN_IDENTIFIER\"] = \"inject_token_indentifier\";\n    metadata[\"INJECT_INDEX_IDENTIFIER\"] = \"inject_index_indentifier\";\n})(metadata = exports.metadata || (exports.metadata = {}));\nvar handlers;\n(function (handlers) {\n    handlers[\"COMMAND\"] = \"command\";\n    handlers[\"OPTION\"] = \"option\";\n    handlers[\"NOT_FOUND\"] = \"not_found\";\n    handlers[\"MAJOR\"] = \"major\";\n})(handlers = exports.handlers || (exports.handlers = {}));\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst validator = __importStar(require(\"../utils/validator\"));\nconst metadata_1 = require(\"../constants/metadata\");\nexports.SubOptions = (commandOptions = []) => target => {\n    validator.mustBeArray(commandOptions, 'SubOptions Params');\n    const nextOptions = commandOptions.map(item => {\n        validator.requireKey(item.name, 'SubOptions name');\n        return Object.assign({}, { type: Boolean }, item);\n    });\n    Reflect.defineMetadata(metadata_1.metadata.SUB_OPTION_IDENTIFIER, nextOptions, target);\n    return target;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst metadata_1 = require(\"../constants/metadata\");\nexports.CommandNotFound = () => target => {\n    Reflect.defineMetadata(metadata_1.metadata.HANDLER_IDENTIFIER, metadata_1.handlers.NOT_FOUND, target);\n    return target;\n};\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst validator = __importStar(require(\"../utils/validator\"));\nconst metadata_1 = require(\"../constants/metadata\");\nexports.Option = (optionParams) => target => {\n    if (!optionParams.type) {\n        optionParams.type = Boolean;\n    }\n    validator.requireKey(optionParams.name, 'name');\n    Reflect.defineMetadata(metadata_1.metadata.OPTION_IDENTIFIER, optionParams || {}, target);\n    Reflect.defineMetadata(metadata_1.metadata.HANDLER_IDENTIFIER, metadata_1.handlers.OPTION, target);\n    return target;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.requireKey = (value, key) => {\n    if (!value) {\n        throw new Error(`Param \\`${key}\\` is required.`);\n    }\n};\nexports.mustBeArray = (value, key) => {\n    if (!Array.isArray(value)) {\n        throw new Error(`Param \\`${key}\\` must be \\`Array\\`.`);\n    }\n};\n","/*! *****************************************************************************\nCopyright (C) Microsoft. All rights reserved.\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\nthis file except in compliance with the License. You may obtain a copy of the\nLicense at http://www.apache.org/licenses/LICENSE-2.0\n\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\nMERCHANTABLITY OR NON-INFRINGEMENT.\n\nSee the Apache Version 2.0 License for specific language governing permissions\nand limitations under the License.\n***************************************************************************** */\nvar Reflect;\n(function (Reflect) {\n    // Metadata Proposal\n    // https://rbuckton.github.io/reflect-metadata/\n    (function (factory) {\n        var root = typeof global === \"object\" ? global :\n            typeof self === \"object\" ? self :\n                typeof this === \"object\" ? this :\n                    Function(\"return this;\")();\n        var exporter = makeExporter(Reflect);\n        if (typeof root.Reflect === \"undefined\") {\n            root.Reflect = Reflect;\n        }\n        else {\n            exporter = makeExporter(root.Reflect, exporter);\n        }\n        factory(exporter);\n        function makeExporter(target, previous) {\n            return function (key, value) {\n                if (typeof target[key] !== \"function\") {\n                    Object.defineProperty(target, key, { configurable: true, writable: true, value: value });\n                }\n                if (previous)\n                    previous(key, value);\n            };\n        }\n    })(function (exporter) {\n        var hasOwn = Object.prototype.hasOwnProperty;\n        // feature test for Symbol support\n        var supportsSymbol = typeof Symbol === \"function\";\n        var toPrimitiveSymbol = supportsSymbol && typeof Symbol.toPrimitive !== \"undefined\" ? Symbol.toPrimitive : \"@@toPrimitive\";\n        var iteratorSymbol = supportsSymbol && typeof Symbol.iterator !== \"undefined\" ? Symbol.iterator : \"@@iterator\";\n        var supportsCreate = typeof Object.create === \"function\"; // feature test for Object.create support\n        var supportsProto = { __proto__: [] } instanceof Array; // feature test for __proto__ support\n        var downLevel = !supportsCreate && !supportsProto;\n        var HashMap = {\n            // create an object in dictionary mode (a.k.a. \"slow\" mode in v8)\n            create: supportsCreate\n                ? function () { return MakeDictionary(Object.create(null)); }\n                : supportsProto\n                    ? function () { return MakeDictionary({ __proto__: null }); }\n                    : function () { return MakeDictionary({}); },\n            has: downLevel\n                ? function (map, key) { return hasOwn.call(map, key); }\n                : function (map, key) { return key in map; },\n            get: downLevel\n                ? function (map, key) { return hasOwn.call(map, key) ? map[key] : undefined; }\n                : function (map, key) { return map[key]; },\n        };\n        // Load global or shim versions of Map, Set, and WeakMap\n        var functionPrototype = Object.getPrototypeOf(Function);\n        var usePolyfill = typeof process === \"object\" && process.env && process.env[\"REFLECT_METADATA_USE_MAP_POLYFILL\"] === \"true\";\n        var _Map = !usePolyfill && typeof Map === \"function\" && typeof Map.prototype.entries === \"function\" ? Map : CreateMapPolyfill();\n        var _Set = !usePolyfill && typeof Set === \"function\" && typeof Set.prototype.entries === \"function\" ? Set : CreateSetPolyfill();\n        var _WeakMap = !usePolyfill && typeof WeakMap === \"function\" ? WeakMap : CreateWeakMapPolyfill();\n        // [[Metadata]] internal slot\n        // https://rbuckton.github.io/reflect-metadata/#ordinary-object-internal-methods-and-internal-slots\n        var Metadata = new _WeakMap();\n        /**\n         * Applies a set of decorators to a property of a target object.\n         * @param decorators An array of decorators.\n         * @param target The target object.\n         * @param propertyKey (Optional) The property key to decorate.\n         * @param attributes (Optional) The property descriptor for the target key.\n         * @remarks Decorators are applied in reverse order.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Example = Reflect.decorate(decoratorsArray, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.decorate(decoratorsArray, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.decorate(decoratorsArray, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Object.defineProperty(Example, \"staticMethod\",\n         *         Reflect.decorate(decoratorsArray, Example, \"staticMethod\",\n         *             Object.getOwnPropertyDescriptor(Example, \"staticMethod\")));\n         *\n         *     // method (on prototype)\n         *     Object.defineProperty(Example.prototype, \"method\",\n         *         Reflect.decorate(decoratorsArray, Example.prototype, \"method\",\n         *             Object.getOwnPropertyDescriptor(Example.prototype, \"method\")));\n         *\n         */\n        function decorate(decorators, target, propertyKey, attributes) {\n            if (!IsUndefined(propertyKey)) {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsObject(attributes) && !IsUndefined(attributes) && !IsNull(attributes))\n                    throw new TypeError();\n                if (IsNull(attributes))\n                    attributes = undefined;\n                propertyKey = ToPropertyKey(propertyKey);\n                return DecorateProperty(decorators, target, propertyKey, attributes);\n            }\n            else {\n                if (!IsArray(decorators))\n                    throw new TypeError();\n                if (!IsConstructor(target))\n                    throw new TypeError();\n                return DecorateConstructor(decorators, target);\n            }\n        }\n        exporter(\"decorate\", decorate);\n        // 4.1.2 Reflect.metadata(metadataKey, metadataValue)\n        // https://rbuckton.github.io/reflect-metadata/#reflect.metadata\n        /**\n         * A default metadata decorator factory that can be used on a class, class member, or parameter.\n         * @param metadataKey The key for the metadata entry.\n         * @param metadataValue The value for the metadata entry.\n         * @returns A decorator function.\n         * @remarks\n         * If `metadataKey` is already defined for the target and target key, the\n         * metadataValue for that key will be overwritten.\n         * @example\n         *\n         *     // constructor\n         *     @Reflect.metadata(key, value)\n         *     class Example {\n         *     }\n         *\n         *     // property (on constructor, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticProperty;\n         *     }\n         *\n         *     // property (on prototype, TypeScript only)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         property;\n         *     }\n         *\n         *     // method (on constructor)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         static staticMethod() { }\n         *     }\n         *\n         *     // method (on prototype)\n         *     class Example {\n         *         @Reflect.metadata(key, value)\n         *         method() { }\n         *     }\n         *\n         */\n        function metadata(metadataKey, metadataValue) {\n            function decorator(target, propertyKey) {\n                if (!IsObject(target))\n                    throw new TypeError();\n                if (!IsUndefined(propertyKey) && !IsPropertyKey(propertyKey))\n                    throw new TypeError();\n                OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n            }\n            return decorator;\n        }\n        exporter(\"metadata\", metadata);\n        /**\n         * Define a unique metadata entry on the target.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param metadataValue A value that contains attached metadata.\n         * @param target The target object on which to define metadata.\n         * @param propertyKey (Optional) The property key for the target.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example);\n         *\n         *     // property (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     Reflect.defineMetadata(\"custom:annotation\", options, Example.prototype, \"method\");\n         *\n         *     // decorator factory as metadata-producing annotation.\n         *     function MyAnnotation(options): Decorator {\n         *         return (target, key?) => Reflect.defineMetadata(\"custom:annotation\", options, target, key);\n         *     }\n         *\n         */\n        function defineMetadata(metadataKey, metadataValue, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryDefineOwnMetadata(metadataKey, metadataValue, target, propertyKey);\n        }\n        exporter(\"defineMetadata\", defineMetadata);\n        /**\n         * Gets a value indicating whether the target object or its prototype chain has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object or its prototype chain; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasMetadata\", hasMetadata);\n        /**\n         * Gets a value indicating whether the target object has the provided metadata key defined.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata key was defined on the target object; otherwise, `false`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.hasOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function hasOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryHasOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"hasOwnMetadata\", hasOwnMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object or its prototype chain.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getMetadata\", getMetadata);\n        /**\n         * Gets the metadata value for the provided metadata key on the target object.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns The metadata value for the metadata key if found; otherwise, `undefined`.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryGetOwnMetadata(metadataKey, target, propertyKey);\n        }\n        exporter(\"getOwnMetadata\", getOwnMetadata);\n        /**\n         * Gets the metadata keys defined on the target object or its prototype chain.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getMetadataKeys\", getMetadataKeys);\n        /**\n         * Gets the unique metadata keys defined on the target object.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns An array of unique metadata keys.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.getOwnMetadataKeys(Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.getOwnMetadataKeys(Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.getOwnMetadataKeys(Example.prototype, \"method\");\n         *\n         */\n        function getOwnMetadataKeys(target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            return OrdinaryOwnMetadataKeys(target, propertyKey);\n        }\n        exporter(\"getOwnMetadataKeys\", getOwnMetadataKeys);\n        /**\n         * Deletes the metadata entry from the target object with the provided key.\n         * @param metadataKey A key used to store and retrieve metadata.\n         * @param target The target object on which the metadata is defined.\n         * @param propertyKey (Optional) The property key for the target.\n         * @returns `true` if the metadata entry was found and deleted; otherwise, false.\n         * @example\n         *\n         *     class Example {\n         *         // property declarations are not part of ES6, though they are valid in TypeScript:\n         *         // static staticProperty;\n         *         // property;\n         *\n         *         constructor(p) { }\n         *         static staticMethod(p) { }\n         *         method(p) { }\n         *     }\n         *\n         *     // constructor\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example);\n         *\n         *     // property (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticProperty\");\n         *\n         *     // property (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"property\");\n         *\n         *     // method (on constructor)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example, \"staticMethod\");\n         *\n         *     // method (on prototype)\n         *     result = Reflect.deleteMetadata(\"custom:annotation\", Example.prototype, \"method\");\n         *\n         */\n        function deleteMetadata(metadataKey, target, propertyKey) {\n            if (!IsObject(target))\n                throw new TypeError();\n            if (!IsUndefined(propertyKey))\n                propertyKey = ToPropertyKey(propertyKey);\n            var metadataMap = GetOrCreateMetadataMap(target, propertyKey, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            if (!metadataMap.delete(metadataKey))\n                return false;\n            if (metadataMap.size > 0)\n                return true;\n            var targetMetadata = Metadata.get(target);\n            targetMetadata.delete(propertyKey);\n            if (targetMetadata.size > 0)\n                return true;\n            Metadata.delete(target);\n            return true;\n        }\n        exporter(\"deleteMetadata\", deleteMetadata);\n        function DecorateConstructor(decorators, target) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsConstructor(decorated))\n                        throw new TypeError();\n                    target = decorated;\n                }\n            }\n            return target;\n        }\n        function DecorateProperty(decorators, target, propertyKey, descriptor) {\n            for (var i = decorators.length - 1; i >= 0; --i) {\n                var decorator = decorators[i];\n                var decorated = decorator(target, propertyKey, descriptor);\n                if (!IsUndefined(decorated) && !IsNull(decorated)) {\n                    if (!IsObject(decorated))\n                        throw new TypeError();\n                    descriptor = decorated;\n                }\n            }\n            return descriptor;\n        }\n        function GetOrCreateMetadataMap(O, P, Create) {\n            var targetMetadata = Metadata.get(O);\n            if (IsUndefined(targetMetadata)) {\n                if (!Create)\n                    return undefined;\n                targetMetadata = new _Map();\n                Metadata.set(O, targetMetadata);\n            }\n            var metadataMap = targetMetadata.get(P);\n            if (IsUndefined(metadataMap)) {\n                if (!Create)\n                    return undefined;\n                metadataMap = new _Map();\n                targetMetadata.set(P, metadataMap);\n            }\n            return metadataMap;\n        }\n        // 3.1.1.1 OrdinaryHasMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasmetadata\n        function OrdinaryHasMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return true;\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryHasMetadata(MetadataKey, parent, P);\n            return false;\n        }\n        // 3.1.2.1 OrdinaryHasOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryhasownmetadata\n        function OrdinaryHasOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return false;\n            return ToBoolean(metadataMap.has(MetadataKey));\n        }\n        // 3.1.3.1 OrdinaryGetMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetmetadata\n        function OrdinaryGetMetadata(MetadataKey, O, P) {\n            var hasOwn = OrdinaryHasOwnMetadata(MetadataKey, O, P);\n            if (hasOwn)\n                return OrdinaryGetOwnMetadata(MetadataKey, O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (!IsNull(parent))\n                return OrdinaryGetMetadata(MetadataKey, parent, P);\n            return undefined;\n        }\n        // 3.1.4.1 OrdinaryGetOwnMetadata(MetadataKey, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarygetownmetadata\n        function OrdinaryGetOwnMetadata(MetadataKey, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return undefined;\n            return metadataMap.get(MetadataKey);\n        }\n        // 3.1.5.1 OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarydefineownmetadata\n        function OrdinaryDefineOwnMetadata(MetadataKey, MetadataValue, O, P) {\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ true);\n            metadataMap.set(MetadataKey, MetadataValue);\n        }\n        // 3.1.6.1 OrdinaryMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinarymetadatakeys\n        function OrdinaryMetadataKeys(O, P) {\n            var ownKeys = OrdinaryOwnMetadataKeys(O, P);\n            var parent = OrdinaryGetPrototypeOf(O);\n            if (parent === null)\n                return ownKeys;\n            var parentKeys = OrdinaryMetadataKeys(parent, P);\n            if (parentKeys.length <= 0)\n                return ownKeys;\n            if (ownKeys.length <= 0)\n                return parentKeys;\n            var set = new _Set();\n            var keys = [];\n            for (var _i = 0, ownKeys_1 = ownKeys; _i < ownKeys_1.length; _i++) {\n                var key = ownKeys_1[_i];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            for (var _a = 0, parentKeys_1 = parentKeys; _a < parentKeys_1.length; _a++) {\n                var key = parentKeys_1[_a];\n                var hasKey = set.has(key);\n                if (!hasKey) {\n                    set.add(key);\n                    keys.push(key);\n                }\n            }\n            return keys;\n        }\n        // 3.1.7.1 OrdinaryOwnMetadataKeys(O, P)\n        // https://rbuckton.github.io/reflect-metadata/#ordinaryownmetadatakeys\n        function OrdinaryOwnMetadataKeys(O, P) {\n            var keys = [];\n            var metadataMap = GetOrCreateMetadataMap(O, P, /*Create*/ false);\n            if (IsUndefined(metadataMap))\n                return keys;\n            var keysObj = metadataMap.keys();\n            var iterator = GetIterator(keysObj);\n            var k = 0;\n            while (true) {\n                var next = IteratorStep(iterator);\n                if (!next) {\n                    keys.length = k;\n                    return keys;\n                }\n                var nextValue = IteratorValue(next);\n                try {\n                    keys[k] = nextValue;\n                }\n                catch (e) {\n                    try {\n                        IteratorClose(iterator);\n                    }\n                    finally {\n                        throw e;\n                    }\n                }\n                k++;\n            }\n        }\n        // 6 ECMAScript Data Typ0es and Values\n        // https://tc39.github.io/ecma262/#sec-ecmascript-data-types-and-values\n        function Type(x) {\n            if (x === null)\n                return 1 /* Null */;\n            switch (typeof x) {\n                case \"undefined\": return 0 /* Undefined */;\n                case \"boolean\": return 2 /* Boolean */;\n                case \"string\": return 3 /* String */;\n                case \"symbol\": return 4 /* Symbol */;\n                case \"number\": return 5 /* Number */;\n                case \"object\": return x === null ? 1 /* Null */ : 6 /* Object */;\n                default: return 6 /* Object */;\n            }\n        }\n        // 6.1.1 The Undefined Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-undefined-type\n        function IsUndefined(x) {\n            return x === undefined;\n        }\n        // 6.1.2 The Null Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-null-type\n        function IsNull(x) {\n            return x === null;\n        }\n        // 6.1.5 The Symbol Type\n        // https://tc39.github.io/ecma262/#sec-ecmascript-language-types-symbol-type\n        function IsSymbol(x) {\n            return typeof x === \"symbol\";\n        }\n        // 6.1.7 The Object Type\n        // https://tc39.github.io/ecma262/#sec-object-type\n        function IsObject(x) {\n            return typeof x === \"object\" ? x !== null : typeof x === \"function\";\n        }\n        // 7.1 Type Conversion\n        // https://tc39.github.io/ecma262/#sec-type-conversion\n        // 7.1.1 ToPrimitive(input [, PreferredType])\n        // https://tc39.github.io/ecma262/#sec-toprimitive\n        function ToPrimitive(input, PreferredType) {\n            switch (Type(input)) {\n                case 0 /* Undefined */: return input;\n                case 1 /* Null */: return input;\n                case 2 /* Boolean */: return input;\n                case 3 /* String */: return input;\n                case 4 /* Symbol */: return input;\n                case 5 /* Number */: return input;\n            }\n            var hint = PreferredType === 3 /* String */ ? \"string\" : PreferredType === 5 /* Number */ ? \"number\" : \"default\";\n            var exoticToPrim = GetMethod(input, toPrimitiveSymbol);\n            if (exoticToPrim !== undefined) {\n                var result = exoticToPrim.call(input, hint);\n                if (IsObject(result))\n                    throw new TypeError();\n                return result;\n            }\n            return OrdinaryToPrimitive(input, hint === \"default\" ? \"number\" : hint);\n        }\n        // 7.1.1.1 OrdinaryToPrimitive(O, hint)\n        // https://tc39.github.io/ecma262/#sec-ordinarytoprimitive\n        function OrdinaryToPrimitive(O, hint) {\n            if (hint === \"string\") {\n                var toString_1 = O.toString;\n                if (IsCallable(toString_1)) {\n                    var result = toString_1.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            else {\n                var valueOf = O.valueOf;\n                if (IsCallable(valueOf)) {\n                    var result = valueOf.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n                var toString_2 = O.toString;\n                if (IsCallable(toString_2)) {\n                    var result = toString_2.call(O);\n                    if (!IsObject(result))\n                        return result;\n                }\n            }\n            throw new TypeError();\n        }\n        // 7.1.2 ToBoolean(argument)\n        // https://tc39.github.io/ecma262/2016/#sec-toboolean\n        function ToBoolean(argument) {\n            return !!argument;\n        }\n        // 7.1.12 ToString(argument)\n        // https://tc39.github.io/ecma262/#sec-tostring\n        function ToString(argument) {\n            return \"\" + argument;\n        }\n        // 7.1.14 ToPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-topropertykey\n        function ToPropertyKey(argument) {\n            var key = ToPrimitive(argument, 3 /* String */);\n            if (IsSymbol(key))\n                return key;\n            return ToString(key);\n        }\n        // 7.2 Testing and Comparison Operations\n        // https://tc39.github.io/ecma262/#sec-testing-and-comparison-operations\n        // 7.2.2 IsArray(argument)\n        // https://tc39.github.io/ecma262/#sec-isarray\n        function IsArray(argument) {\n            return Array.isArray\n                ? Array.isArray(argument)\n                : argument instanceof Object\n                    ? argument instanceof Array\n                    : Object.prototype.toString.call(argument) === \"[object Array]\";\n        }\n        // 7.2.3 IsCallable(argument)\n        // https://tc39.github.io/ecma262/#sec-iscallable\n        function IsCallable(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Call]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.4 IsConstructor(argument)\n        // https://tc39.github.io/ecma262/#sec-isconstructor\n        function IsConstructor(argument) {\n            // NOTE: This is an approximation as we cannot check for [[Construct]] internal method.\n            return typeof argument === \"function\";\n        }\n        // 7.2.7 IsPropertyKey(argument)\n        // https://tc39.github.io/ecma262/#sec-ispropertykey\n        function IsPropertyKey(argument) {\n            switch (Type(argument)) {\n                case 3 /* String */: return true;\n                case 4 /* Symbol */: return true;\n                default: return false;\n            }\n        }\n        // 7.3 Operations on Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-objects\n        // 7.3.9 GetMethod(V, P)\n        // https://tc39.github.io/ecma262/#sec-getmethod\n        function GetMethod(V, P) {\n            var func = V[P];\n            if (func === undefined || func === null)\n                return undefined;\n            if (!IsCallable(func))\n                throw new TypeError();\n            return func;\n        }\n        // 7.4 Operations on Iterator Objects\n        // https://tc39.github.io/ecma262/#sec-operations-on-iterator-objects\n        function GetIterator(obj) {\n            var method = GetMethod(obj, iteratorSymbol);\n            if (!IsCallable(method))\n                throw new TypeError(); // from Call\n            var iterator = method.call(obj);\n            if (!IsObject(iterator))\n                throw new TypeError();\n            return iterator;\n        }\n        // 7.4.4 IteratorValue(iterResult)\n        // https://tc39.github.io/ecma262/2016/#sec-iteratorvalue\n        function IteratorValue(iterResult) {\n            return iterResult.value;\n        }\n        // 7.4.5 IteratorStep(iterator)\n        // https://tc39.github.io/ecma262/#sec-iteratorstep\n        function IteratorStep(iterator) {\n            var result = iterator.next();\n            return result.done ? false : result;\n        }\n        // 7.4.6 IteratorClose(iterator, completion)\n        // https://tc39.github.io/ecma262/#sec-iteratorclose\n        function IteratorClose(iterator) {\n            var f = iterator[\"return\"];\n            if (f)\n                f.call(iterator);\n        }\n        // 9.1 Ordinary Object Internal Methods and Internal Slots\n        // https://tc39.github.io/ecma262/#sec-ordinary-object-internal-methods-and-internal-slots\n        // 9.1.1.1 OrdinaryGetPrototypeOf(O)\n        // https://tc39.github.io/ecma262/#sec-ordinarygetprototypeof\n        function OrdinaryGetPrototypeOf(O) {\n            var proto = Object.getPrototypeOf(O);\n            if (typeof O !== \"function\" || O === functionPrototype)\n                return proto;\n            // TypeScript doesn't set __proto__ in ES5, as it's non-standard.\n            // Try to determine the superclass constructor. Compatible implementations\n            // must either set __proto__ on a subclass constructor to the superclass constructor,\n            // or ensure each class has a valid `constructor` property on its prototype that\n            // points back to the constructor.\n            // If this is not the same as Function.[[Prototype]], then this is definately inherited.\n            // This is the case when in ES6 or when using __proto__ in a compatible browser.\n            if (proto !== functionPrototype)\n                return proto;\n            // If the super prototype is Object.prototype, null, or undefined, then we cannot determine the heritage.\n            var prototype = O.prototype;\n            var prototypeProto = prototype && Object.getPrototypeOf(prototype);\n            if (prototypeProto == null || prototypeProto === Object.prototype)\n                return proto;\n            // If the constructor was not a function, then we cannot determine the heritage.\n            var constructor = prototypeProto.constructor;\n            if (typeof constructor !== \"function\")\n                return proto;\n            // If we have some kind of self-reference, then we cannot determine the heritage.\n            if (constructor === O)\n                return proto;\n            // we have a pretty good guess at the heritage.\n            return constructor;\n        }\n        // naive Map shim\n        function CreateMapPolyfill() {\n            var cacheSentinel = {};\n            var arraySentinel = [];\n            var MapIterator = /** @class */ (function () {\n                function MapIterator(keys, values, selector) {\n                    this._index = 0;\n                    this._keys = keys;\n                    this._values = values;\n                    this._selector = selector;\n                }\n                MapIterator.prototype[\"@@iterator\"] = function () { return this; };\n                MapIterator.prototype[iteratorSymbol] = function () { return this; };\n                MapIterator.prototype.next = function () {\n                    var index = this._index;\n                    if (index >= 0 && index < this._keys.length) {\n                        var result = this._selector(this._keys[index], this._values[index]);\n                        if (index + 1 >= this._keys.length) {\n                            this._index = -1;\n                            this._keys = arraySentinel;\n                            this._values = arraySentinel;\n                        }\n                        else {\n                            this._index++;\n                        }\n                        return { value: result, done: false };\n                    }\n                    return { value: undefined, done: true };\n                };\n                MapIterator.prototype.throw = function (error) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    throw error;\n                };\n                MapIterator.prototype.return = function (value) {\n                    if (this._index >= 0) {\n                        this._index = -1;\n                        this._keys = arraySentinel;\n                        this._values = arraySentinel;\n                    }\n                    return { value: value, done: true };\n                };\n                return MapIterator;\n            }());\n            return /** @class */ (function () {\n                function Map() {\n                    this._keys = [];\n                    this._values = [];\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                }\n                Object.defineProperty(Map.prototype, \"size\", {\n                    get: function () { return this._keys.length; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Map.prototype.has = function (key) { return this._find(key, /*insert*/ false) >= 0; };\n                Map.prototype.get = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    return index >= 0 ? this._values[index] : undefined;\n                };\n                Map.prototype.set = function (key, value) {\n                    var index = this._find(key, /*insert*/ true);\n                    this._values[index] = value;\n                    return this;\n                };\n                Map.prototype.delete = function (key) {\n                    var index = this._find(key, /*insert*/ false);\n                    if (index >= 0) {\n                        var size = this._keys.length;\n                        for (var i = index + 1; i < size; i++) {\n                            this._keys[i - 1] = this._keys[i];\n                            this._values[i - 1] = this._values[i];\n                        }\n                        this._keys.length--;\n                        this._values.length--;\n                        if (key === this._cacheKey) {\n                            this._cacheKey = cacheSentinel;\n                            this._cacheIndex = -2;\n                        }\n                        return true;\n                    }\n                    return false;\n                };\n                Map.prototype.clear = function () {\n                    this._keys.length = 0;\n                    this._values.length = 0;\n                    this._cacheKey = cacheSentinel;\n                    this._cacheIndex = -2;\n                };\n                Map.prototype.keys = function () { return new MapIterator(this._keys, this._values, getKey); };\n                Map.prototype.values = function () { return new MapIterator(this._keys, this._values, getValue); };\n                Map.prototype.entries = function () { return new MapIterator(this._keys, this._values, getEntry); };\n                Map.prototype[\"@@iterator\"] = function () { return this.entries(); };\n                Map.prototype[iteratorSymbol] = function () { return this.entries(); };\n                Map.prototype._find = function (key, insert) {\n                    if (this._cacheKey !== key) {\n                        this._cacheIndex = this._keys.indexOf(this._cacheKey = key);\n                    }\n                    if (this._cacheIndex < 0 && insert) {\n                        this._cacheIndex = this._keys.length;\n                        this._keys.push(key);\n                        this._values.push(undefined);\n                    }\n                    return this._cacheIndex;\n                };\n                return Map;\n            }());\n            function getKey(key, _) {\n                return key;\n            }\n            function getValue(_, value) {\n                return value;\n            }\n            function getEntry(key, value) {\n                return [key, value];\n            }\n        }\n        // naive Set shim\n        function CreateSetPolyfill() {\n            return /** @class */ (function () {\n                function Set() {\n                    this._map = new _Map();\n                }\n                Object.defineProperty(Set.prototype, \"size\", {\n                    get: function () { return this._map.size; },\n                    enumerable: true,\n                    configurable: true\n                });\n                Set.prototype.has = function (value) { return this._map.has(value); };\n                Set.prototype.add = function (value) { return this._map.set(value, value), this; };\n                Set.prototype.delete = function (value) { return this._map.delete(value); };\n                Set.prototype.clear = function () { this._map.clear(); };\n                Set.prototype.keys = function () { return this._map.keys(); };\n                Set.prototype.values = function () { return this._map.values(); };\n                Set.prototype.entries = function () { return this._map.entries(); };\n                Set.prototype[\"@@iterator\"] = function () { return this.keys(); };\n                Set.prototype[iteratorSymbol] = function () { return this.keys(); };\n                return Set;\n            }());\n        }\n        // naive WeakMap shim\n        function CreateWeakMapPolyfill() {\n            var UUID_SIZE = 16;\n            var keys = HashMap.create();\n            var rootKey = CreateUniqueKey();\n            return /** @class */ (function () {\n                function WeakMap() {\n                    this._key = CreateUniqueKey();\n                }\n                WeakMap.prototype.has = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.has(table, this._key) : false;\n                };\n                WeakMap.prototype.get = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? HashMap.get(table, this._key) : undefined;\n                };\n                WeakMap.prototype.set = function (target, value) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ true);\n                    table[this._key] = value;\n                    return this;\n                };\n                WeakMap.prototype.delete = function (target) {\n                    var table = GetOrCreateWeakMapTable(target, /*create*/ false);\n                    return table !== undefined ? delete table[this._key] : false;\n                };\n                WeakMap.prototype.clear = function () {\n                    // NOTE: not a real clear, just makes the previous data unreachable\n                    this._key = CreateUniqueKey();\n                };\n                return WeakMap;\n            }());\n            function CreateUniqueKey() {\n                var key;\n                do\n                    key = \"@@WeakMap@@\" + CreateUUID();\n                while (HashMap.has(keys, key));\n                keys[key] = true;\n                return key;\n            }\n            function GetOrCreateWeakMapTable(target, create) {\n                if (!hasOwn.call(target, rootKey)) {\n                    if (!create)\n                        return undefined;\n                    Object.defineProperty(target, rootKey, { value: HashMap.create() });\n                }\n                return target[rootKey];\n            }\n            function FillRandomBytes(buffer, size) {\n                for (var i = 0; i < size; ++i)\n                    buffer[i] = Math.random() * 0xff | 0;\n                return buffer;\n            }\n            function GenRandomBytes(size) {\n                if (typeof Uint8Array === \"function\") {\n                    if (typeof crypto !== \"undefined\")\n                        return crypto.getRandomValues(new Uint8Array(size));\n                    if (typeof msCrypto !== \"undefined\")\n                        return msCrypto.getRandomValues(new Uint8Array(size));\n                    return FillRandomBytes(new Uint8Array(size), size);\n                }\n                return FillRandomBytes(new Array(size), size);\n            }\n            function CreateUUID() {\n                var data = GenRandomBytes(UUID_SIZE);\n                // mark as random - RFC 4122 § 4.4\n                data[6] = data[6] & 0x4f | 0x40;\n                data[8] = data[8] & 0xbf | 0x80;\n                var result = \"\";\n                for (var offset = 0; offset < UUID_SIZE; ++offset) {\n                    var byte = data[offset];\n                    if (offset === 4 || offset === 6 || offset === 8)\n                        result += \"-\";\n                    if (byte < 16)\n                        result += \"0\";\n                    result += byte.toString(16).toLowerCase();\n                }\n                return result;\n            }\n        }\n        // uses a heuristic used by v8 and chakra to force an object into dictionary mode.\n        function MakeDictionary(obj) {\n            obj.__ = undefined;\n            delete obj.__;\n            return obj;\n        }\n    });\n})(Reflect || (Reflect = {}));\n","const flagSymbol = Symbol('arg flag');\n\nfunction arg(opts, {argv, permissive = false, stopAtPositional = false} = {}) {\n\tif (!opts) {\n\t\tthrow new Error('Argument specification object is required');\n\t}\n\n\tconst result = {_: []};\n\n\targv = argv || process.argv.slice(2);\n\n\tconst aliases = {};\n\tconst handlers = {};\n\n\tfor (const key of Object.keys(opts)) {\n\t\tif (!key) {\n\t\t\tthrow new TypeError('Argument key cannot be an empty string');\n\t\t}\n\n\t\tif (key[0] !== '-') {\n\t\t\tthrow new TypeError(`Argument key must start with '-' but found: '${key}'`);\n\t\t}\n\n\t\tif (key.length === 1) {\n\t\t\tthrow new TypeError(`Argument key must have a name; singular '-' keys are not allowed: ${key}`);\n\t\t}\n\n\t\tif (typeof opts[key] === 'string') {\n\t\t\taliases[key] = opts[key];\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet type = opts[key];\n\t\tlet isFlag = false;\n\n\t\tif (Array.isArray(type) && type.length === 1 && typeof type[0] === 'function') {\n\t\t\tconst [fn] = type;\n\t\t\ttype = (value, name, prev = []) => {\n\t\t\t\tprev.push(fn(value, name, prev[prev.length - 1]));\n\t\t\t\treturn prev;\n\t\t\t};\n\t\t\tisFlag = fn === Boolean || fn[flagSymbol] === true;\n\t\t} else if (typeof type === 'function') {\n\t\t\tisFlag = type === Boolean || type[flagSymbol] === true;\n\t\t} else {\n\t\t\tthrow new TypeError(`Type missing or not a function or valid array type: ${key}`);\n\t\t}\n\n\t\tif (key[1] !== '-' && key.length > 2) {\n\t\t\tthrow new TypeError(`Short argument keys (with a single hyphen) must have only one character: ${key}`);\n\t\t}\n\n\t\thandlers[key] = [type, isFlag];\n\t}\n\n\tfor (let i = 0, len = argv.length; i < len; i++) {\n\t\tconst wholeArg = argv[i];\n\n\t\tif (stopAtPositional && result._.length > 0) {\n\t\t\tresult._ = result._.concat(argv.slice(i));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg === '--') {\n\t\t\tresult._ = result._.concat(argv.slice(i + 1));\n\t\t\tbreak;\n\t\t}\n\n\t\tif (wholeArg.length > 1 && wholeArg[0] === '-') {\n\t\t\t/* eslint-disable operator-linebreak */\n\t\t\tconst separatedArguments = (wholeArg[1] === '-' || wholeArg.length === 2)\n\t\t\t\t? [wholeArg]\n\t\t\t\t: wholeArg.slice(1).split('').map(a => `-${a}`);\n\t\t\t/* eslint-enable operator-linebreak */\n\n\t\t\tfor (let j = 0; j < separatedArguments.length; j++) {\n\t\t\t\tconst arg = separatedArguments[j];\n\t\t\t\tconst [originalArgName, argStr] = arg[1] === '-' ? arg.split('=', 2) : [arg, undefined];\n\n\t\t\t\tlet argName = originalArgName;\n\t\t\t\twhile (argName in aliases) {\n\t\t\t\t\targName = aliases[argName];\n\t\t\t\t}\n\n\t\t\t\tif (!(argName in handlers)) {\n\t\t\t\t\tif (permissive) {\n\t\t\t\t\t\tresult._.push(arg);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst err = new Error(`Unknown or unexpected option: ${originalArgName}`);\n\t\t\t\t\t\terr.code = 'ARG_UNKNOWN_OPTION';\n\t\t\t\t\t\tthrow err;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst [type, isFlag] = handlers[argName];\n\n\t\t\t\tif (!isFlag && ((j + 1) < separatedArguments.length)) {\n\t\t\t\t\tthrow new TypeError(`Option requires argument (but was followed by another short argument): ${originalArgName}`);\n\t\t\t\t}\n\n\t\t\t\tif (isFlag) {\n\t\t\t\t\tresult[argName] = type(true, argName, result[argName]);\n\t\t\t\t} else if (argStr === undefined) {\n\t\t\t\t\tif (argv.length < i + 2 || (argv[i + 1].length > 1 && argv[i + 1][0] === '-')) {\n\t\t\t\t\t\tconst extended = originalArgName === argName ? '' : ` (alias for ${argName})`;\n\t\t\t\t\t\tthrow new Error(`Option requires argument: ${originalArgName}${extended}`);\n\t\t\t\t\t}\n\n\t\t\t\t\tresult[argName] = type(argv[i + 1], argName, result[argName]);\n\t\t\t\t\t++i;\n\t\t\t\t} else {\n\t\t\t\t\tresult[argName] = type(argStr, argName, result[argName]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tresult._.push(wholeArg);\n\t\t}\n\t}\n\n\treturn result;\n}\n\narg.flag = fn => {\n\tfn[flagSymbol] = true;\n\treturn fn;\n};\n\n// Utility types\narg.COUNT = arg.flag((v, name, existingCount) => (existingCount || 0) + 1);\n\nmodule.exports = arg;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./command\"));\n__export(require(\"./option\"));\n__export(require(\"./sub-options\"));\n__export(require(\"./not-found\"));\n__export(require(\"./major\"));\n__export(require(\"./injectable\"));\n","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst annotations_1 = require(\"../annotations\");\nlet CommandArgsProvider = class CommandArgsProvider {\n    constructor(_inputs, _option, _native, _value) {\n        this._inputs = _inputs;\n        this._option = _option;\n        this._native = _native;\n        this._value = _value;\n    }\n    get inputs() {\n        return this._inputs;\n    }\n    get option() {\n        return this._option;\n    }\n    get native() {\n        return this._native;\n    }\n};\nCommandArgsProvider = __decorate([\n    annotations_1.Injectable(),\n    __metadata(\"design:paramtypes\", [Array, Object, Object, Object])\n], CommandArgsProvider);\nexports.CommandArgsProvider = CommandArgsProvider;\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./command-args\"));\n__export(require(\"./option-args\"));\n__export(require(\"./register\"));\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst services = __importStar(require(\"../services\"));\nconst filter = __importStar(require(\"./filter\"));\nconst metadata_1 = require(\"../constants/metadata\");\nconst serviceFunctions = Object.keys(services)\n    .map(key => services[key]);\nclass Factory {\n    constructor(params) {\n        this.params = params;\n    }\n    getServiceParams(fn, value) {\n        const paramTypes = Reflect.getMetadata(metadata_1.metadata.DESIGN_PARAM_TYPES, fn) || [];\n        const args = this.params.args;\n        const option = this.params.nativeOption;\n        return paramTypes.map(type => {\n            const fn = serviceFunctions.find(item => item === type);\n            if (!fn)\n                return undefined;\n            if (!fn.isRegisterProvider)\n                return new fn(args._, option, args, value);\n            const cDatas = filter.commandsToDatas(this.params.commands);\n            const oDatas = filter.optionsToDatas(this.params.options);\n            return new fn(cDatas, oDatas);\n        });\n    }\n}\nexports.Factory = Factory;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst arg_1 = __importDefault(require(\"arg\"));\nconst filter = __importStar(require(\"../utils/filter\"));\nconst factory_1 = require(\"../utils/factory\");\nconst metadata_1 = require(\"../constants/metadata\");\nclass Mutation {\n    devour({ commands, options, notFounds, majors, }) {\n        const command = this.findCommand(commands);\n        const optionDatas = filter.optionsToDatas(options);\n        const globalOptions = filter.optionsToKeyValue(optionDatas);\n        const commandOptions = this.findSubOptions(command);\n        const nextOptions = command ? commandOptions : globalOptions;\n        this.args = arg_1.default(nextOptions, { permissive: true });\n        let currnetTriggerOptionKey = '';\n        const nativeOption = Object.keys(nextOptions)\n            .reduce((pre, key) => {\n            if (!key.startsWith('--'))\n                return pre;\n            const nativeKey = filter.removeHyphen(key);\n            const nativeVal = this.args[key] || undefined;\n            if (nativeVal) {\n                currnetTriggerOptionKey = nativeKey;\n            }\n            return Object.assign({}, pre, { [nativeKey]: nativeVal });\n        }, {});\n        const factory = new factory_1.Factory({\n            nativeOption,\n            args: this.args,\n            commands,\n            options,\n        });\n        if (command) {\n            const params = factory.getServiceParams(command);\n            return new command(...params);\n        }\n        const currentTriggerOptionFn = options.find(fn => {\n            const data = Reflect.getMetadata(metadata_1.metadata.OPTION_IDENTIFIER, fn);\n            return data && data.name === currnetTriggerOptionKey;\n        });\n        if (currentTriggerOptionFn) {\n            const value = nativeOption[currnetTriggerOptionKey];\n            const params = factory.getServiceParams(currentTriggerOptionFn, value);\n            return new currentTriggerOptionFn(...params);\n        }\n        if (this.args._.length > 0) {\n            return notFounds.forEach(notFoundCommand => {\n                const params = factory.getServiceParams(notFoundCommand);\n                new notFoundCommand(...params);\n            });\n        }\n        majors.forEach(majorCommand => {\n            const params = factory.getServiceParams(majorCommand);\n            new majorCommand(...params);\n        });\n    }\n    findSubOptions(command) {\n        if (!command)\n            return {};\n        const subs = Reflect.getMetadata(metadata_1.metadata.SUB_OPTION_IDENTIFIER, command);\n        return filter.optionsToKeyValue(subs);\n    }\n    findCommand(commands) {\n        const inputs = process.argv.slice(2) || [];\n        const first = inputs[0];\n        if (!first || first.startsWith('-'))\n            return undefined;\n        return commands.find(item => {\n            const data = Reflect.getMetadata(metadata_1.metadata.COMMAND_IDENTIFIER, item);\n            if (!data)\n                return false;\n            return data.name === first || data.alias === first;\n        });\n    }\n}\nexports.Mutation = Mutation;\n","\"use strict\";\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst validator = __importStar(require(\"../utils/validator\"));\nconst metadata_1 = require(\"../constants/metadata\");\nconst commandFactory = (commandParams) => target => {\n    validator.requireKey(commandParams.name, 'name');\n    Reflect.defineMetadata(metadata_1.metadata.COMMAND_IDENTIFIER, commandParams || {}, target);\n    Reflect.defineMetadata(metadata_1.metadata.HANDLER_IDENTIFIER, metadata_1.handlers.COMMAND, target);\n    return target;\n};\nexports.Command = (commandParams) => commandFactory(commandParams);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass RegisterProvider {\n    constructor(_commands = [], _options = []) {\n        this._commands = _commands;\n        this._options = _options;\n    }\n    get commands() {\n        return this._commands;\n    }\n    get options() {\n        return this._options;\n    }\n}\nRegisterProvider.isRegisterProvider = true;\nexports.RegisterProvider = RegisterProvider;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst metadata_1 = require(\"../constants/metadata\");\nexports.commandsToDatas = (commands = []) => {\n    return commands.map(fn => Reflect.getMetadata(metadata_1.metadata.COMMAND_IDENTIFIER, fn));\n};\nexports.optionsToDatas = (options) => {\n    return options.map(fn => Reflect.getMetadata(metadata_1.metadata.OPTION_IDENTIFIER, fn));\n};\nexports.optionsToKeyValue = (params = []) => {\n    if (!params || !params.length)\n        return {};\n    return params.reduce((pre, current) => {\n        const name = `--${current.name}`;\n        const alias = current.alias ? { [`-${current.alias}`]: name } : {};\n        return Object.assign({}, pre, {\n            [name]: current.type,\n        }, alias);\n    }, {});\n};\nexports.removeHyphen = (key) => {\n    return key.replace(/^[-]+/, '');\n};\nexports.ensureHyphen = (key, len = 2) => {\n    const hyphens = '-'.repeat(len);\n    return hyphens + exports.removeHyphen(key);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nconst metadata_1 = require(\"../constants/metadata\");\nexports.Injectable = () => target => {\n    const types = Reflect.getMetadata(metadata_1.metadata.DESIGN_PARAM_TYPES, target);\n    Reflect.defineMetadata(metadata_1.metadata.HOST_PARAM_TYPES, types, target);\n    return target;\n};\n","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nrequire(\"reflect-metadata\");\nvar annotations_1 = require(\"./annotations\");\nexports.Option = annotations_1.Option;\nexports.SubOptions = annotations_1.SubOptions;\nexports.Command = annotations_1.Command;\nexports.CommandMajor = annotations_1.CommandMajor;\nexports.CommandNotFound = annotations_1.CommandNotFound;\nvar container_1 = require(\"./containers/container\");\nexports.Container = container_1.Container;\n__export(require(\"./services\"));\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass OptionArgsProvider {\n    constructor(_inputs, _option, _native, _value) {\n        this._inputs = _inputs;\n        this._option = _option;\n        this._native = _native;\n        this._value = _value;\n    }\n    get value() {\n        return this._value;\n    }\n    get native() {\n        return this._native;\n    }\n}\nexports.OptionArgsProvider = OptionArgsProvider;\n"]}