"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const services = __importStar(require("../services"));
const filter = __importStar(require("./filter"));
const metadata_1 = require("../constants/metadata");
const serviceFunctions = Object.keys(services)
    .map(key => services[key]);
class Factory {
    constructor(params) {
        this.params = params;
    }
    getServiceParams(fn, value) {
        const paramTypes = Reflect.getMetadata(metadata_1.metadata.DESIGN_PARAM_TYPES, fn) || [];
        const args = this.params.args;
        const option = this.params.nativeOption;
        return paramTypes.map(type => {
            const fn = serviceFunctions.find(item => item === type);
            if (!fn)
                return undefined;
            if (!fn.isRegisterProvider)
                return new fn(args._, option, args, value);
            const cDatas = filter.commandsToDatas(this.params.commands);
            const oDatas = filter.optionsToDatas(this.params.options);
            return new fn(cDatas, oDatas);
        });
    }
}
exports.Factory = Factory;
